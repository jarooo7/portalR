{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/not-auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts.ts","webpack:///src/app/_models/login.model.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/app/_pipe/time-ago.pipe.ts","webpack:///src/app/_resolvers/like.resolver.ts","webpack:///src/app/_resolvers/message.resolver.ts","webpack:///src/app/_resolvers/user-detail.resolver.ts","webpack:///src/app/_resolvers/user-edit.resolver.ts","webpack:///src/app/_resolvers/user-list.resolver.ts","webpack:///src/app/_serwises/alertify/alertify.service.ts","webpack:///src/app/_serwises/auth/auth.service.ts","webpack:///src/app/_serwises/error/error.interceptor.ts","webpack:///src/app/_serwises/user/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/likes/likes.component.ts","webpack:///src/app/likes/likes.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/user/msg-modal/msg-modal.component.ts","webpack:///src/app/user/msg-modal/msg-modal.component.html","webpack:///src/app/user/photos/photos.component.ts","webpack:///src/app/user/photos/photos.component.html","webpack:///src/app/user/user-card/user-card.component.ts","webpack:///src/app/user/user-card/user-card.component.html","webpack:///src/app/user/user-detail/user-detail.component.ts","webpack:///src/app/user/user-detail/user-detail.component.html","webpack:///src/app/user/user-edit/user-edit.component.ts","webpack:///src/app/user/user-edit/user-edit.component.html","webpack:///src/app/user/users-list/users-list.component.ts","webpack:///src/app/user/users-list/users-list.component.html","webpack:///src/app/value/value.component.ts","webpack:///src/app/value/value.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","auth","router","alertify","loggedIn","error","navigate","providedIn","NotAuthGuard","PreventUnsavedChanges","component","editForm","dirty","confirm","Login","PaginationResult","TimeAgoPipe","value","result","now","Date","getTime","last","delta","Math","floor","name","LikeResolver","userService","alerti","pageNumber","pageSize","likesParam","route","getUsers","pipe","MessageResolver","authService","messageContainer","getMessages","dekoded","nameid","UserDetailResolver","getUser","params","UserEditResolver","UserListResolver","AlertifyService","msg","success","worning","message","title","okCallback","AuthService","http","baseAddress","apiUrl","jwthelper","model","post","response","user","localStorage","setItem","token","JSON","stringify","decodeToken","currentUser","getItem","isTokenExpired","ErrorInterceptor","next","handle","applicationError","headers","get","console","serverError","errors","errorErrors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","baseUrl","parse","page","itemsPerPage","userParams","likesParams","paginationResult","append","minAge","maxAge","gender","city","orderBy","observe","body","pagination","put","userId","recipientId","AppComponent","selector","templateUrl","styleUrls","getToken","AppModule","bsLocaleService","use","forRoot","config","tokenGetter","allowedDomains","disallowedRoutes","declarations","imports","providers","bootstrap","ChatComponent","fb","messages","currantPage","itemPerPage","totalItems","totalPages","currentPage","flagLink","isStart","messageForm","group","content","required","re","ReId","getMessageThread","undefined","subscribe","res","length","autoSaveInterval","setInterval","UpdateMsg","temp","reverse","Array","prototype","push","apply","forEach","x","flag","y","event","loadMessages","userIdForMsg","scrollToBottom","myScrollContainer","nativeElement","scrollTop","scrollHeight","err","sendMessage","val","onScroll","sendMsg","HomeComponent","registerMod","info","a","LikesComponent","alertity","data","users","loadUsers","option","loadUsersLike","pageChanged","MessagesComponent","flagaOutbox","senderId","log","NavComponent","login","removeItem","RegisterComponent","localeService","cancelRegister","locale","locales","createRegisterForm","fg","mismatch","registerForm","userName","password","minLength","maxLength","confirmPassword","dateOfBirth","country","validator","passwordMatchValidator","valid","Object","assign","register","emit","cancel","appRoutes","path","canActivate","runGuardsAndResolvers","children","canDeactivate","redirectTo","pathMatch","MsgModalComponent","bsModalRef","flagStart","ReUser","uploader","URL","PhotosComponent","getUserPhotoChange","hasBaseDropZoneOver","initializeUploader","url","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","respons","status","headres","photo","dateAdded","description","isMain","photos","setMainPhoto","currentMain","filter","p","photoUrl","delPhoto","splice","findIndex","fileOverBase","UserCardComponent","modalService","sendLike","initialState","show","closeBtnName","openMsg","UserDetailComponent","startgallery","galleryOptions","width","height","thumbnailsColumns","imageAnimation","Slide","breakpoint","imagePercent","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","preview","galleryImages","getImages","imagesUrl","small","medium","big","UserEditComponent","$event","returnValue","updateUser","reset","UpdateMainPhoto","UsersListComponent","sortParam","genderList","display","sortList","resetFilters","ValueComponent","getValues","values","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private auth: AuthService, private router: Router, private alertify: AlertifyService) {\n\n  }\n\n\n  canActivate(): boolean {\n\n    if (this.auth.loggedIn()) {\n      return true;\n    }\n    this.alertify.error('Nie masz uprawnień');\n    this.router.navigate(['/home']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotAuthGuard implements CanActivate {\n\n\n  constructor(private auth: AuthService, private router: Router, private alertify: AlertifyService) {\n\n  }\n\n\n  canActivate(): boolean {\n\n    if (this.auth.loggedIn()) {\n      this.router.navigate(['/uzytkownicy']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { CanActivate, CanDeactivate } from '@angular/router';\nimport { UserEditComponent } from '../user/user-edit/user-edit.component';\n\nexport class PreventUnsavedChanges implements CanDeactivate<UserEditComponent> {\n    canDeactivate(component: UserEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Jesteś pewien że chcesz kontynuować, dokonałeś zmian, niezapisane zmiany zostaną utracone!');\n        }\n        return true;\n    }\n}\n","export class Login {\n    UserName: string;\n    password: string;\n}\n","export interface Pagination {\n    currantPage: number;\n    itemPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginationResult<T>{\n    result: T;\n    pagination: Pagination;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n  transform(value: string): string {\n    let result: string;\n\n    // current time\n    const now = new Date().getTime();\n\n    const last = new Date(value);\n\n    // time since message was sent in seconds\n    const delta = (now - last.getTime()) / 1000;\n\n    // format string\n    if (delta < 10) {\n      result = 'teraz';\n    } else if (delta < 60) { // sent in last minute\n      result =  Math.floor(delta) + ' s. temu';\n    } else if (delta < 3600) { // sent in last hour\n      result = + Math.floor(delta / 60) + ' min. temu';\n    } else if (delta < 86400) { // sent on last day\n      result =  Math.floor(delta / 3600) + ' godz. temu';\n    } else if (delta >= 86400 && delta < 132800) { // sent more than one day ago\n      result = 'wczoraj';\n    } else{\n      result = Math.floor(delta / 86400) + ' dni';\n    }\n\n    return result;\n  }\n\n}\n","import { Route } from '@angular/compiler/src/core';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User } from '../_models/User.model';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { UserService } from '../_serwises/user/user.service';\n\n@Injectable()\n\nexport class LikeResolver implements Resolve<User[]>{\n    pageNumber = 1;\n    pageSize = 12;\n    likesParam = 'All';\n\n\n    constructor(\n        private userService: UserService,\n        private router: Router,\n        private alerti: AlertifyService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n            catchError(error => {\n                this.alerti.error('Problem z pobranem danych');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/User.model';\r\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\r\nimport { AuthService } from '../_serwises/auth/auth.service';\r\nimport { UserService } from '../_serwises/user/user.service';\r\n\r\n@Injectable()\r\n\r\nexport class MessageResolver implements Resolve<Message[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Panel';\r\n\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private alertify: AlertifyService,\r\n        private authService: AuthService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.dekoded.nameid,\r\n            this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem z wyszukiwaniem wiadomości');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/User.model';\r\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\r\nimport { UserService } from '../_serwises/user/user.service';\r\n\r\n@Injectable()\r\n\r\nexport class UserDetailResolver implements Resolve<User>{\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private alerti: AlertifyService) { }\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params.id).pipe(\r\n            catchError(error => {\r\n                this.alerti.error('Problem z pobranem danych');\r\n                this.router.navigate(['/uzytkownicy']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/User.model';\r\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\r\nimport { AuthService } from '../_serwises/auth/auth.service';\r\nimport { UserService } from '../_serwises/user/user.service';\r\n\r\n@Injectable()\r\n\r\nexport class UserEditResolver implements Resolve<User>{\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private alerti: AlertifyService,\r\n        private authService: AuthService) { }\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.dekoded.nameid).pipe(\r\n            catchError(error => {\r\n                this.alerti.error('Problem z pobranem danych');\r\n                this.router.navigate(['/uzytkownicy']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/User.model';\r\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\r\nimport { UserService } from '../_serwises/user/user.service';\r\n\r\n@Injectable()\r\n\r\nexport class UserListResolver implements Resolve<User[]>{\r\n    pageNumber = 1;\r\n    pageSize = 12;\r\n\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private alerti: AlertifyService) { }\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alerti.error('Problem z pobranem danych');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  success(msg: string) {\n    alertify.success(msg);\n  }\n\n  error(msg: string) {\n    alertify.error(msg);\n  }\n\n  worning(msg: string) {\n    alertify.worning(msg);\n  }\n\n  message(msg: string) {\n    alertify.message(msg);\n  }\n  confirm(title: string, msg: string, okCallback: () => any) {\n    alertify.confirm(title, msg, (e) => {\n      if (e) {\n        okCallback();\n      } else { }\n    }, () => { });\n  }\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Login } from 'src/app/_models/login.model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/User.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseAddress = environment.apiUrl + 'auth/';\n  dekoded: any;\n  jwthelper = new JwtHelperService();\n  currentUser: User;\n  constructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http.post(this.baseAddress + 'login', model)\n      .pipe(map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.dekoded = this.jwthelper.decodeToken(user.token);\n          this.currentUser = user.user;\n        }\n      }));\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseAddress + 'register', model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    this.dekoded = this.jwthelper.decodeToken(token);\n    return !this.jwthelper.isTokenExpired(token);\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { nextTick } from 'process';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse) {\n\n\n          const applicationError = error.headers.get('Application-Error');\n\n          if (applicationError) {\n            console.error(applicationError);\n            return throwError(applicationError);\n          }\n\n          const serverError = error.error;\n          let errors = '';\n          const errorErrors = serverError.errors;\n\n\n          if (errorErrors && typeof errorErrors === 'object') {\n            for (const key in errorErrors) {\n              if (errorErrors[key]) {\n                errors += errorErrors[key] + '\\n';\n              }\n            }\n          }\n          return throwError(errors || serverError || 'Server Error');\n        }\n      })\n    );\n  }\n\n}\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true\n};\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { observable, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Message, SendMsg } from 'src/app/_models/Message';\nimport { PaginationResult } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/User.model';\nimport { environment } from 'src/environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.apiUrl;\n  user: User = JSON.parse(localStorage.getItem('user'));\n\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginationResult<User[]>> {\n    const paginationResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n\n    }\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge ? userParams.minAge : 18);\n      params = params.append('maxAge', userParams.maxAge ? userParams.maxAge : 100);\n      params = params.append('gender', userParams.gender);\n      if (userParams.city !== '' && userParams.city != null) {\n        params = params.append('city', userParams.city);\n      }\n      params = params.append('orderBy', userParams.orderBy);\n    }\n    if (likesParams != null) {\n      switch (likesParams) {\n        case 'UserLikes':\n          params = params.append('UserLikes', 'true');\n          break;\n        case 'UserIsLiked':\n          params = params.append('UserIsLiked', 'true');\n          break;\n        case 'All':\n          params = params.append('UserIsLiked', 'true');\n          params = params.append('UserLikes', 'true');\n          break;\n      }\n\n    }\n    return this.http.get<User[]>(this.baseUrl + 'user', { observe: 'response', params }).pipe(\n      map(\n        response => {\n          paginationResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginationResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginationResult;\n        }\n      )\n    );\n  }\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'user/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'user/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'user/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  delPhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'user/' + userId + '/photos/' + id);\n  }\n\n  sendLike(userId: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'user/' + userId + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n\n    const paginationResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'user/' + id + '/message', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginationResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginationResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number,  page?, itemsPerPage?) {\n    const paginationResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n    let params = new HttpParams();\n    params = params.append('MessageContainer', 'brak');\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n    return this.http.get<Message[]>(this.baseUrl + 'user/' + id + '/message/thread/' + recipientId, { observe: 'response', params })\n    .pipe(\n      map(response => {\n        paginationResult.result = response.body;\n\n        if (response.headers.get('Pagination') != null) {\n          paginationResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n\n        return paginationResult;\n      })\n    );\n  }\n  sendMessage(userId: number,msg: SendMsg){\n    return this.http.post(this.baseUrl + 'user/' + userId + '/message', msg);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from './_models/User.model';\nimport { AuthService } from './_serwises/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  /**\n   *\n   */\n  constructor(private authService: AuthService) {\n\n  }\n\n  ngOnInit() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.authService.currentUser = user;\n    }\n  }\n}\n\n","<app-nav></app-nav>\r\n<!-- <div style=\"margin-top: 10em;\"> -->\r\n<router-outlet></router-outlet>\r\n<!-- </div> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ValueComponent } from './value/value.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from './_serwises/auth/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AlertifyService } from './_serwises/alertify/alertify.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { UserService } from './_serwises/user/user.service';\nimport { UsersListComponent } from './user/users-list/users-list.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { LikesComponent } from './likes/likes.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { BsDropdownModule, } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ErrorInterceptorProvider } from './_serwises/error/error.interceptor';\nimport { UserCardComponent } from './user/user-card/user-card.component';\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\nimport { UserListResolver } from './_resolvers/user-list.resolver';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard.ts';\nimport { PhotosComponent } from './user/photos/photos.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { plLocale } from 'ngx-bootstrap/locale';\nimport { TimeAgoPipe } from './_pipe/time-ago.pipe';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { LikeResolver } from './_resolvers/like.resolver';\nimport { MessageResolver } from './_resolvers/message.resolver';\nimport { ChatComponent } from './chat/chat.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MsgModalComponent } from './user/msg-modal/msg-modal.component';\nimport { NotAuthGuard } from './_guards/not-auth.guard';\ndefineLocale('pl', plLocale);\n\nexport function getToken() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ValueComponent,\n    NavComponent,\n    HomeComponent,\n    UsersListComponent,\n    RegisterComponent,\n    LikesComponent,\n    MessagesComponent,\n    UserCardComponent,\n    UserDetailComponent,\n    UserEditComponent,\n    PhotosComponent,\n    TimeAgoPipe,\n    ChatComponent,\n    MsgModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: getToken,\n        allowedDomains: ['localhost:5000'],\n        disallowedRoutes: ['http://localhost:5000/auth/'],\n      },\n    }),\n    PaginationModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    InfiniteScrollModule,\n    ModalModule.forRoot()\n  ],\n  providers: [\n    AuthService,\n    AlertifyService,\n    UserService,\n    AuthGuard,\n    NotAuthGuard,\n    ErrorInterceptorProvider,\n    UserDetailResolver,\n    UserListResolver,\n    UserEditResolver,\n    LikeResolver,\n    PreventUnsavedChanges,\n    MessageResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(private bsLocaleService: BsLocaleService) {\n    this.bsLocaleService.use('pl');\n  }\n}\n","import { AfterViewChecked, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { merge } from 'rxjs';\nimport { Message, SendMsg } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\nimport { UserService } from '../_serwises/user/user.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit{\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n  ReId: number;\n  @Input('recipientId')\n \n  set in(val) {\n    this.currentPage = 1;\n    this.messages = [];\n    this.loadMessages(val);\n    this.scrollToBottom();\n  }\n  messages: Message[] = [];\n  pagination: Pagination = {\n    currantPage: 1,\n    itemPerPage: 6,\n    totalItems: null,\n    totalPages: null\n  };\n  messageForm: FormGroup;\n  currentPage = 1;\n  flagLink = true;\n  isStart=true;\n\n  constructor(\n    private userService: UserService,\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder\n    ) {\n      \n  }\n  ngOnInit(): void {\n    this.messageForm=this.fb.group( {content: ['', Validators.required]})\n  }\n\n  loadMessages(re: number) {\n    this.flagLink = true;\n    this.ReId = re;\n    this.userService.getMessageThread(this.authService.dekoded.nameid, re,\n      this.currentPage,\n      (this.pagination === undefined || this.pagination.itemPerPage === undefined) ? 6 : this.pagination.itemPerPage)\n      .subscribe((res: PaginationResult<Message[]>) => {\n\n        if (res.result.length < 6) {\n          this.flagLink = false;\n        }\n        if(this.isStart){\n          var autoSaveInterval = setInterval( ()=>{\n            if(this.ReId!==null&&this.ReId!==undefined){\n              this.UpdateMsg();\n            }\n          },15000);\n          this.isStart=false;\n        }\n\n        const temp = res.result.reverse();\n\n         Array.prototype.push.apply(temp, this.messages);\n        this.messages = temp;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n\n\n\n  UpdateMsg() {\n    this.flagLink = true;\n    this.userService.getMessageThread(this.authService.dekoded.nameid, this.ReId,\n      1,\n      (this.pagination === undefined || this.pagination.itemPerPage === undefined) ? 6 : this.pagination.itemPerPage)\n      .subscribe((res: PaginationResult<Message[]>) => {\n\n        if (res.result.length < 6) {\n          this.flagLink = false;\n        }\n        const temp = res.result.reverse();\n        if(this.messages.length!==0){\n          if(this.messages[this.messages.length-1].id ===temp[temp.length-1].id){\n            return;\n          }\n        }\n        temp.forEach(x=>{\n          var flag = true;\n          this.messages.forEach(\n            y=>{\n              if(x.id===y.id){\n                flag=false\n              }\n            }\n          )\n          if(flag){\n            this.messages.push(x);\n          }\n        })\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n\n\n\n  pageChanged(event: any): void {\n    this.pagination.currantPage = event.page;\n    this.loadMessages(this.ReId);\n  }\n\n  isYou(userIdForMsg: number) {\n    return userIdForMsg == this.authService.dekoded.nameid;\n  }\n\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch (err) { }\n  }\n  onScroll() {\n    this.currentPage++;\n    this.loadMessages(this.ReId);\n  }\n\n  sendMsg(){\n    var msg :SendMsg={\n      content:this.messageForm.get('content').value,\n      recipientId: this.ReId\n    }\n    this.userService.sendMessage(this.authService.dekoded.nameid,msg).subscribe(\n      ()=>{\n        this.alertify.message('Wiadomość wysłana');\n        this.UpdateMsg();\n      }, error => {\n        this.alertify.error(error);}\n    )\n  }\n}\n","<div class=\"msg-pane\">\n  <div class=\"msg-content-list text-center\" #scrollMe (click)=\"onScroll()\">\n    <button *ngIf=\"flagLink\" type=\"button\" class=\"btn btn-link mx-auto\">Załaduj starsze</button>\n    <div *ngFor=\"let msg of messages\">\n      <div class=\"row msg-content p-2 mr-5 m-3 alert-info\" *ngIf=\"!isYou(msg.senderId) \">\n        <img [src]=\"msg.senderPhotoUrl?  \n    msg.senderPhotoUrl : msg.senderGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\"\n          class=\"img-avatar\">\n        <div class=\"col text-left\">\n          <p> {{msg.senderUsername|uppercase}}</p>\n          {{msg.content}}\n          \n          <p class=\"msg-date msg-date-r\">{{msg.dateSent|timeAgo}}</p>\n        </div>\n      </div>\n      <div class=\"row msg-content p-2 ml-5 m-3  alert-light\" *ngIf=\"isYou(msg.senderId)\">\n        <div class=\"col text-right\">\n          <p> TY</p>\n          {{msg.content}}\n          <p class=\"msg-date msg-date-l\">{{msg.dateSent|timeAgo}}</p>\n        </div>\n        <img [src]=\"msg.senderPhotoUrl?  \n    msg.senderPhotoUrl : msg.senderGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\"\n          class=\"img-avatar\">\n      </div>\n    </div>\n  </div>\n  <div style=\"position: relative; top: -45px\">\n    <form [formGroup]=\"messageForm\" >\n      <div class=\"input-group\">\n          <input type=\"text\" \n                 class=\"form-control input-sm\"\n                 placeholder=\"wyślij prywatną wiadomość\"\n                 name=\"content\"\n                 formControlName=\"content\"\n                 required>\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-info\" (click)=\"sendMsg()\" [disabled]=\"!messageForm.valid\">Wyślij</button>\n          </div>\n      </div>    \n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMod = false;\n  info = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  register(){\n    this.registerMod = true;\n  }\n  cancel(a: string){\n    this.registerMod = false;\n  }\n  toggleMore(){\n    this.info= !this.info;\n  }\n\n}\n","<div class=\"container-fluid container-pad home-bg text-light\">\n  <div *ngIf=\"!registerMod\">\n    <div style=\"text-align: center;\">\n      <img src=\"../../assets/logo.svg\" class=\"logo my-5\">\n      <h3 class=\"text-light\">Zarejestruj się</h3>\n    </div>\n    <div class=\"text-center\">\n      <button class=\"btn btn-danger btn-lg m-2\" (click)=\"register()\">Rejestracja</button>\n      <button class=\"btn btn-info btn-lg m-2\" (click)=\"toggleMore()\">{{info?'Mniej':'Więcej...'}}</button>\n    </div>\n      <h5 class=\"more text-center mx-auto mt-5 text-light\" *ngIf=\"info\">Portal PearPiar jest to portal randkowy, przeznaczony dla osób samotnych\n        oraz szukających nowych znajomości.</h5>\n  </div>\n\n  <div *ngIf=\"registerMod\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-4\">\n        <app-register (cancelRegister)=\"cancel($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { User } from '../_models/User.model';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\nimport { UserService } from '../_serwises/user/user.service';\n\n@Component({\n  selector: 'app-likes',\n  templateUrl: './likes.component.html',\n  styleUrls: ['./likes.component.scss']\n})\nexport class LikesComponent implements OnInit {\n\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(\n    private userService: UserService,\n    private alertity: AlertifyService,\n    private route: ActivatedRoute,\n    private auth: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data.users.result;\n      this.pagination = data.users.pagination;\n    });\n    this.likesParam = 'All';\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currantPage, this.pagination.itemPerPage, null, this.likesParam)\n      .subscribe((res: PaginationResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertity.error(error);\n      });\n  }\n  pageChanged(event: any): void {\n    this.pagination.currantPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsersLike(option: string){\n    this.likesParam = option;\n    this.loadUsers();\n  }\n\n}\n","<div class=\"container mt-3 container-pad\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"alert alert-dismissible alert-dark\">\n        <strong>{{users.length}} z {{pagination.totalItems}}</strong> Wyników\n      </div>\n      <div class=\"btn-group-vertical  btn-block \">\n        <button class=\"btn  btn-lg  btn-block\" [ngClass]=\"likesParam == 'All' ? 'btn-dark' : 'btn-outline-dark'\"\n          (click)=\"loadUsersLike('All')\">\n          Dopasowania</button>\n        <button class=\"btn btn-lg  btn-block \"\n          [ngClass]=\"likesParam == 'UserIsLiked' ? 'btn-dark' : 'btn-outline-dark'\"\n          (click)=\"loadUsersLike('UserIsLiked')\">\n          Lubisz </button>\n        <button class=\"btn btn-lg  btn-block \"\n          [ngClass]=\"likesParam == 'UserLikes' ? 'btn-dark' : 'btn-outline-dark'\"\n          (click)=\"loadUsersLike('UserLikes')\">\n          Lubią Cię</button>\n      </div>\n    </div>\n    <div class=\"col-md-9\">\n      <div class=\"row\">\n        <pagination class=\"ml-auto\" [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n          [itemsPerPage]=\"pagination.itemPerPage\" [(ngModel)]=\"pagination.currantPage\"\n          (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n          lastText=\"&raquo;\">\n        </pagination>\n      </div>\n      <div class=\"row\">\n        <div *ngFor=\"let user of users\" class=\"col-lg-4 col-md-6 col-sm-12\">\n          <app-user-card [user]=\"user\"></app-user-card>\n        </div>\n      </div>\n      <div class=\"row\">\n        <pagination class=\"ml-auto\" [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n          [itemsPerPage]=\"pagination.itemPerPage\" [(ngModel)]=\"pagination.currantPage\"\n          (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n          lastText=\"&raquo;\">\n        </pagination>\n      </div>\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { MetaDefinition } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Message } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\nimport { UserService } from '../_serwises/user/user.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'panel';\n  flagaOutbox = false;\n  recipientId: number;\n\n  constructor(\n    private userService: UserService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService) { }\n\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data.messages.result;\n      this.pagination = data.messages.pagination;\n      this.recipientId = data.messages.result[0].senderId == this.authService.dekoded.nameid ?\n        data.messages.result[0].recipientId :\n        data.messages.result[0].senderId;\n    });\n  }\n\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.dekoded.nameid, this.pagination.currantPage,\n      this.pagination.itemPerPage, this.messageContainer)\n      .subscribe((res: PaginationResult<Message[]>) => {\n        console.log(res.result);\n        Array.prototype.push.apply(this.messages, res.result);\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currantPage = event.page;\n    this.loadMessages();\n  }\n\n  changeChat(id: number) {\n    this.recipientId = id;\n  }\n\n  onScroll() {\n    console.log('scroll');\n    this.pagination.currantPage++;\n    this.loadMessages();\n  }\n}\n","<div class=\"container container-pad\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-lg-5 col-sm-3 col-3 search-results\" infiniteScroll\n    [scrollWindow]=\"false\"\n    [infiniteScrollDistance]=\"2\"\n    [infiniteScrollThrottle]=\"50\"\n    (scrolled)=\"onScroll()\">\n \n      <div class=\"row msg-item pt-4 pr-2\" *ngFor=\"let msg of messages\" \n      (click)=\"changeChat(msg.senderId==authService.dekoded.nameid ? msg.recipientId:msg.senderId)\">\n        <div class=\"col w-img mb-3\">\n          <img [src]=\"msg.senderId==authService.dekoded.nameid ?\n           msg.recipientPhotoUrl?  msg.recipientPhotoUrl :\n           msg.recipientGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\n           : msg.senderPhotoUrl?  msg.recipientPhotoUrl :\n           msg.senderGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\" class=\"img-avatar\"></div>\n        <div class=\"col title-message\">\n          <div class=\"app\">\n            <h4>\n              {{msg.senderId==authService.dekoded.nameid ? msg.recipientUsername:msg.senderUsername}}\n            </h4>\n            <p> {{msg.content}}</p>\n          </div>\n          <div class=\"row\"><p class=\"ml-auto\">{{msg.dateSent| timeAgo }}</p></div>\n        </div>\n\n\n      </div>\n  \n    </div>\n    <div class=\"col-lg-7 col-md-6 col-9 col-sm-9\">\n          <app-chat [recipientId]=\"recipientId\"></app-chat>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Login } from '../_models/login.model';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { AuthService } from '../_serwises/auth/auth.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: Login = new Login();\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model)\n      .subscribe(next => {\n        this.alertify.success('Zalogowałeś się');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.router.navigate(['/uzytkownicy']);\n      });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.currentUser = null;\n    this.authService.dekoded = null;\n    this.alertify.message('Wylogowałeś się');\n    this.router.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">\r\n      <img src=\"../../assets/logo.svg\" class=\"logo\">\r\n    </a>\r\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\r\n      aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button> -->\r\n\r\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto ml-4 \">\r\n      <li class=\"nav-item mx-2\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link h4\" [routerLink]=\"['/uzytkownicy']\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></a>\r\n      </li>\r\n      <li class=\"nav-item mx-2\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link h4\" [routerLink]=\"['/polubienia']\"><i class=\"fa fa-heart\" aria-hidden=\"true\"></i></a>\r\n      </li>\r\n      <li class=\"nav-item mx-2\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link h4\" [routerLink]=\"['/wiadomosci']\"><i class=\"fa fa-comment\" aria-hidden=\"true\"></i></a>\r\n      </li>\r\n\r\n    </ul>\r\n\r\n    <div *ngIf=\"loggedIn()\" class=\"dropdown  mr-5\" dropdown>\r\n\r\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\r\n        <span class=\"mr-3\"><img id=\"avatar-user\" [src]=\"authService.currentUser.photoUrl ? authService.currentUser.photoUrl :\r\n             authService.currentUser.gender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\"></span>\r\n      </a>\r\n      <div class=\"dropdown-menu \" *dropdownMenu>\r\n        <a class=\"dropdown-item text-light\" [routerLink]=\"['/uzytkownicy/edycja']\"><i class=\"fa fa-user mr-2 \"></i>\r\n          Mój profil</a>\r\n        <a class=\"dropdown-item text-light\" (click)=\"logout()\"><i class=\"fa fa-sign-out mr-2\"></i> Wyloguj</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form *ngIf=\"!loggedIn()\" #LogiForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\r\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Login\" [(ngModel)]=\"model.UserName\" name=\"UserName\"\r\n        required>\r\n      <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Hasło\" [(ngModel)]=\"model.password\"\r\n        name=\"password\" required>\r\n      <button [disabled]=\"!LogiForm.valid\" class=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Zaloguj</button>\r\n    </form>\r\n  </div>\r\n</nav>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AuthService } from '../_serwises/auth/auth.service';\nimport { AlertifyService } from '../_serwises/alertify/alertify.service';\nimport { Login } from '../_models/login.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../_models/User.model';\nimport { Router } from '@angular/router';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { listLocales } from 'ngx-bootstrap/chronos';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() cancelRegister = new EventEmitter();\n  locale = 'pl';\n  locales = listLocales();\n  bsConfig: Partial<BsDatepickerConfig>;\n  user: User;\n  model: Login = new Login();\n  registerForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder,\n    private router: Router,\n    private localeService: BsLocaleService) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n\n  }\n  passwordMatchValidator(fg: FormGroup) {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null : { mismatch: true };\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(12)]],\n      confirmPassword: ['', Validators.required],\n      gender: ['kobieta'],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n\n      this.user = Object.assign({}, this.registerForm.value);\n\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('rejestracja udana');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/uzytkownicy']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit('');\n    console.log('Anulowane');\n  }\n}\n","<form class=\"text-light\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-light\">Zapisz sie</h2>\n  <hr>\n\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control \" placeholder=\"Nazwa użytkownia\" name=\"userName\" formControlName=\"userName\"\n      [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&  registerForm.get('userName').touched}\">\n    <div class=\"invalid-feedback\">Podaj nazewę użytkownika</div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">Płeć: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"mężczyzna\" formControlName=\"gender\">Mężczyzną\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"kobieta\" formControlName=\"gender\">Kobietą\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" placeholder=\"Data urodzenia\" formControlName=\"dateOfBirth\" bsDatepicker [bsConfig]=\"bsConfig\"\n           [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\">\n    <div class=\"invalid-feedback\" \n          *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">\n        Data urodzenia jest wymagana\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input class=\"form-control\" placeholder=\"Miasto\" formControlName=\"city\"\n           [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" >\n    <div class=\"invalid-feedback\" \n          *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">  \n        Miasto jest wymagane\n      </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <input class=\"form-control\" placeholder=\"Kraj\" formControlName=\"country\"\n           [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" >\n    <div class=\"invalid-feedback\" \n          *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">\n        Kraj jest wymagany\n    </div>\n  </div>\n\n\n\n\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control \" placeholder=\"Hasło\" name=\"password\" formControlName=\"password\"\n      [ngClass]=\"{'is-invalid': registerForm.get('password').errors &&  registerForm.get('password').touched}\">\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\n      Hasło jest wymagane\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\">\n      Hasło nie może mieć mniej niż 6 znaki\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\">\n      Hasło nie może mieć więcej niż 12 znaków\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control \" placeholder=\"Powtórz hasło\" name=\"confirmPassword\"\n      formControlName=\"confirmPassword\" [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors &&  \n      registerForm.get('confirmPassword').touched || registerForm.hasError('mismatch')}\">\n    <div class=\"invalid-feedback\"\n      *ngIf=\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\">\n      Hasło jest wymagane\n    </div>\n    <div class=\"invalid-feedback\"\n      *ngIf=\" registerForm.hasError('mismatch')&& registerForm.get('confirmPassword').touched\">\n      Podane hasła są różne\n    </div>\n  </div>\n\n\n  <div class=\" form-group text-center\">\n    <button class=\"btn btn-success m-2\" type=\"submit\">Rejestracja</button>\n    <button class=\"btn btn-info m-2\" type=\"submit\" (click)=\"cancel()\">Anuluj</button>\n  </div>\n</form>","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LikesComponent } from './likes/likes.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { UsersListComponent } from './user/users-list/users-list.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { NotAuthGuard } from './_guards/not-auth.guard';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard.ts';\nimport { LikeResolver } from './_resolvers/like.resolver';\nimport { MessageResolver } from './_resolvers/message.resolver';\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\nimport { UserListResolver } from './_resolvers/user-list.resolver';\n\nexport const appRoutes: Routes = [\n    { path: '', component: HomeComponent ,canActivate: [NotAuthGuard],},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            { path: 'uzytkownicy', component: UsersListComponent, resolve: { users: UserListResolver } },\n            {\n                path: 'uzytkownicy/edycja',\n                component: UserEditComponent,\n                resolve: { user: UserEditResolver },\n                canDeactivate: [PreventUnsavedChanges]\n            },\n            { path: 'uzytkownicy/:id', component: UserDetailComponent, resolve: { user: UserDetailResolver } },\n            { path: 'polubienia', component: LikesComponent, resolve: { users: LikeResolver } },\n            { path: 'wiadomosci', component: MessagesComponent , resolve: {messages : MessageResolver } },\n        ]\n    },\n    { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n","import { AfterViewChecked, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Message, SendMsg } from 'src/app/_models/Message';\nimport { Pagination, PaginationResult } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { AuthService } from 'src/app/_serwises/auth/auth.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\n\n@Component({\n  selector: 'app-msg-modal',\n  templateUrl: './msg-modal.component.html',\n  styleUrls: ['./msg-modal.component.scss']\n})\nexport class MsgModalComponent implements OnInit, AfterViewChecked {\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n\n  ReUser: User;\n  messages: Message[] = [];\n  pagination: Pagination = {\n    currantPage: 1,\n    itemPerPage: 6,\n    totalItems: null,\n    totalPages: null\n  };\n  currentPage = 1;\n  flagLink = true;\n  flagStart = true;\n  isStart= true;\n  \n  messageForm: FormGroup;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private userService: UserService,\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.messageForm=this.fb.group( {content: ['', Validators.required]})\n    this.currentPage = 1;\n    this.messages = [];\n    this.loadMessages();\n    this.scrollToBottom();\n  }\n\n\n  loadMessages() {\n    this.flagLink = true;\n    this.userService.getMessageThread(this.authService.dekoded.nameid, this.ReUser.id,\n      this.currentPage,\n      (this.pagination === undefined || this.pagination.itemPerPage === undefined) ? 6 : this.pagination.itemPerPage)\n      .subscribe((res: PaginationResult<Message[]>) => {\n\n        if (res.result.length < 6) {\n          this.flagLink = false;\n        }\n        console.log(res.result);\n\n        const temp = res.result.reverse();\n        if (res.result.length < 6) {\n          this.flagLink = false;\n        }\n        if(this.isStart){\n          var autoSaveInterval = setInterval( ()=>{\n            if(this.ReUser.id!==null&&this.ReUser.id!==undefined){\n              this.UpdateMsg();\n            }\n          },15000);\n          this.isStart=false;\n        }\n        Array.prototype.push.apply(temp, this.messages);\n        this.messages = temp;\n        this.pagination = res.pagination;\n        this.flagStart = true;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n  UpdateMsg() {\n    this.flagLink = true;\n    this.userService.getMessageThread(this.authService.dekoded.nameid, this.ReUser.id,\n      1,\n      (this.pagination === undefined || this.pagination.itemPerPage === undefined) ? 6 : this.pagination.itemPerPage)\n      .subscribe((res: PaginationResult<Message[]>) => {\n\n        if (res.result.length < 6) {\n          this.flagLink = false;\n        }\n        const temp = res.result.reverse();\n        if(this.messages.length!==0){\n          if(this.messages[this.messages.length-1].id ===temp[temp.length-1].id){\n            return;\n          }\n        }\n        temp.forEach(x=>{\n          var flag = true;\n          this.messages.forEach(\n            y=>{\n              if(x.id===y.id){\n                flag=false\n              }\n            }\n          )\n          if(flag){\n            this.messages.push(x);\n          \n          }\n          \n        })\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n\n\n  isYou(userIdForMsg: number) {\n    return userIdForMsg == this.authService.dekoded.nameid;\n  }\n\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n      if (this.flagStart) {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n        this.flagStart = false;\n      }\n    } catch (err) { }\n  }\n  onScroll() {\n    this.currentPage++;\n    this.loadMessages();\n  }\n\n  \n  sendMsg(){\n    var msg :SendMsg={\n      content:this.messageForm.get('content').value,\n      recipientId: this.ReUser.id\n    }\n    this.userService.sendMessage(this.authService.dekoded.nameid,msg).subscribe(\n      ()=>{\n        this.alertify.message('Wiadomość wysłana');\n        this.UpdateMsg();\n        this.scrollToBottom();\n      }, error => {\n        this.alertify.error(error);}\n    )\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ReUser.userName}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n\n\n\n  <div class=\"msg-pane\">\n    <div class=\"msg-content-list text-center\" #scrollMe (click)=\"onScroll()\">\n      <button *ngIf=\"flagLink\" type=\"button\" class=\"btn btn-link mx-auto\">Załaduj starsze</button>\n      <div *ngFor=\"let msg of messages\">\n        <div class=\"row msg-content p-2 mr-5 m-3 alert-info\" *ngIf=\"!isYou(msg.senderId) \">\n          <img [src]=\"msg.senderPhotoUrl?  \n      msg.senderPhotoUrl : msg.senderGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\"\n            class=\"img-avatar\">\n          <div class=\"col text-left\">\n            <p> {{msg.senderUsername|uppercase}}</p>\n            {{msg.content}}\n            \n            <p class=\"msg-date msg-date-r\">{{msg.dateSent|timeAgo}}</p>\n          </div>\n        </div>\n        <div class=\"row msg-content p-2 ml-5 m-3  alert-light\" *ngIf=\"isYou(msg.senderId)\">\n          <div class=\"col text-right\">\n            <p> TY</p>\n            {{msg.content}}\n            <p class=\"msg-date msg-date-l\">{{msg.dateSent|timeAgo}}</p>\n          </div>\n          <img [src]=\"msg.senderPhotoUrl?  \n      msg.senderPhotoUrl : msg.senderGender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\"\n            class=\"img-avatar\">\n        </div>\n      </div>\n    </div>\n    <div style=\"position: relative; top: -45px\">\n      <form form [formGroup]=\"messageForm\"  >\n        <div class=\"input-group\">\n            <input type=\"text\" \n                   class=\"form-control input-sm\"\n                   placeholder=\"wyślij prywatną wiadomość\"\n                   formControlName=\"content\"\n                   name=\"content\"\n                   required>\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-info\"  (click)=\"sendMsg()\" [disabled]=\"!messageForm.valid\">Wyślij</button>\n            </div>\n        </div>    \n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport { Photo } from 'src/app/_models/Photo.model';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { AuthService } from 'src/app/_serwises/auth/auth.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\nimport { environment } from 'src/environments/environment';\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\n\n@Component({\n  selector: 'app-photos',\n  templateUrl: './photos.component.html',\n  styleUrls: ['./photos.component.scss']\n})\nexport class PhotosComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getUserPhotoChange = new EventEmitter<string>();\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n  response = '';\n\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'user/' + this.authService.dekoded.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, respons, status, headres) => {\n      if (respons) {\n        const res: Photo = JSON.parse(respons);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n\n        // if (photo.isMain) {\n        //   this.authService.changeUserPhoto(photo.url);\n        //   this.authService.currentUser.photoUrl = photo.url;\n        //   localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        // }\n      }\n    };\n  }\n\n  setMain(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.dekoded.nameid, photo.id)\n      .subscribe(() => {\n        console.log('success');\n        this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n        this.currentMain.isMain = false;\n        photo.isMain = true;\n        this.getUserPhotoChange.emit(photo.url);\n        const user: User = JSON.parse(localStorage.getItem('user'));\n        user.photoUrl = photo.url;\n        if (user) {\n          this.authService.currentUser = user;\n        }\n        localStorage.setItem('user', JSON.stringify(user));\n      }, error => {\n        this.alertify.error(error);\n      }\n      );\n  }\n  delPhoto(id: number) {\n    this.alertify.confirm('Usówanie zdjęcia', 'czy jesteś pewien że chcesz usunąć zdjęcie', () => {\n      this.userService.delPhoto(this.authService.dekoded.nameid, id)\n        .subscribe(() => {\n          this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n          this.alertify.success('zdjęcie zostało usunięte');\n        },\n          error => this.alertify.error('Nie udało sie usunąc zdjęcia')\n        );\n    });\n  }\n\n\n\n}\n","<div class=\"row\">\n  <div [ngClass]=\"uploader?.queue?.length ?  'col-md-12' :'col-lg-3 col-md-4 col-sm-6'\">\n    <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center my-drop-zone \">\n      <i class=\"fa fa-upload fa-2x\"></i>\n      Aby dodać zdjęcia upuść je tutaj lub ...\n      <button type=\"button\" class=\"btn btn-outline-success mt-2 btn-sm\" (click)=\"file1.click()\">... Kliknij i\n        wybierz</button>\n    </div>\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple #file1 /><br />\n  </div>\n\n  <div class=\"col-md-12\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n    <h3>Kolejka przesyłania</h3>\n    <p>wielkość kolejki: {{ uploader?.queue?.length }}</p>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Nazwa</th>\n          <th>Rozmiar</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td ><p style=\" max-width: 150px; word-wrap: break-word;\">{{ item?.file?.name }}</p></td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n          <td >\n            <button type=\"button\" class=\"btn btn-success btn-sm\" (click)=\"item.upload()\"\n              [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n              <span class=\"fa fa-upload\"></span>\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\n              <span class=\"fa fa-ban\"></span>\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"item.remove()\">\n              <span class=\"fa fa-trash\"></span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div>\n      <div>\n        Postęp w kolejce\n        <div class=\"progress mb-4\">\n          <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\">\n        <span class=\"fa fa-upload\"></span> Wyślij\n      </button>\n      <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\">\n        <span class=\"fa fa-ban\"></span> Anuluj\n      </button>\n      <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\">\n        <span class=\"fa fa-trash\"></span> Usuń\n      </button>\n    </div>\n  </div>\n\n\n  <div class=\"col-lg-3 col-md-4 col-sm-6\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" alt=\"{{photo.description}}\" class=\"img-thumbnail p-1\">\n    <div class=\"text-cener mb-4\">\n      <button type=\"button\" (click)=\"setMain(photo)\" class=\"btn btn-sm btn-block\" [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-info'\"\n        [disabled]=\"photo.isMain\">Główne</button>\n      <button type=\"button\" (click)=\"delPhoto(photo.id)\" class=\"btn btn-sm btn-danger btn-block mb-4\" [disabled]=\"photo.isMain\"><i\n          class=\"fa fa-trash-o\"></i></button>\n      <hr>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { AuthService } from 'src/app/_serwises/auth/auth.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\nimport { MsgModalComponent } from '../msg-modal/msg-modal.component';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss']\n})\nexport class UserCardComponent implements OnInit {\n  @Input() user: User;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private modalService: BsModalService\n     ) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.dekoded.nameid, id)\n          .subscribe(data => {\n            this.alertify.success('Polubiłeś: ' + this.user.userName);\n          }, error => {\n            this.alertify.error(error);\n          });\n  }\n\n  openMsg() {\n    const initialState = {\n      ReUser: this.user\n    };\n    this.bsModalRef = this.modalService.show(MsgModalComponent, {initialState});\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-image-wrapper\">\n    <!-- <img [src]=\"user.photoUrl\" class=\"card-img-top\"> -->\n    <img class=\"card-img-top\" [src]=\"user.photoUrl ? user.photoUrl :\n    user.gender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\">\n    <ul class=\"list-inline text-center user-icons animation\">\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-danger\" (click)=\"sendLike(user.id)\">\n          <i class=\"fa fa-heart\"></i>\n        </button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-warning\" [routerLink]=\"['/uzytkownicy/',user.id]\" routerLinkActive=\"router-link-active\" >\n          <i class=\"fa fa-user\"></i>\n        </button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-success\" (click)=\"openMsg()\">\n          <i class=\"fa fa-comment\"></i>\n        </button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">{{user.userName}}, {{user.age}}</h4>\n    <p class=\"card-text\">{{user.city}}, {{user.country}}</p>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {NgxGalleryOptions} from '@kolkov/ngx-gallery';\nimport {NgxGalleryImage} from '@kolkov/ngx-gallery';\nimport {NgxGalleryAnimation} from '@kolkov/ngx-gallery';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  constructor(\n    private userService: UserService,\n    private alerti: AlertifyService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n    this.startgallery();\n  }\n\n  startgallery() {\n    this.galleryOptions = [\n      {\n        width: '600px',\n        height: '400px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: '100%',\n        height: '600px',\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20\n      },\n      // max-width 400\n      {\n        breakpoint: 400,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n  getImages() {\n    const imagesUrl = [];\n    this.user.photos.forEach(e => {\n      imagesUrl.push({\n        small: e.url,\n        medium: e.url,\n        big: e.url,\n        description: e.description\n      });\n    });\n    return imagesUrl;\n  }\n}\n","<div class=\"container container-pad\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12\">\n      <div class=\"card\">\n        <img class=\"card-img-top img-radious img-thumbnail\" [src]=\"user.photoUrl ? user.photoUrl :\n        user.gender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\">\n        <!-- <img [src]=\"user?.photoUrl\" class=\"card-img-top img-radious img-thumbnail\"> -->\n        <div class=\"card-body text-center\">\n          <h4 class=\"card-title\">{{user?.userName}}, {{user?.age}}</h4>\n          <p class=\"card-text\">{{user?.city}}, {{user?.country}}</p>\n          <h5>Utworzono</h5>\n          <p class=\"card-text\"> {{user?.created|date:'dd-MM-yyyy'}}</p>\n          <h5>Ostatnia aktywność</h5>\n          <p class=\"card-text\"> {{user?.lastAction | timeAgo }}</p>\n          <button class=\"btn btn-danger  btn-card\">\n            <i class=\"fa fa-heart\"></i>\n          </button>\n          <button class=\"btn btn-success  btn-card\">\n            <i class=\"fa fa-comment\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-8 col-sm-12\">\n      <div class=\"tab-panel\">\n        <tabset class=\"user-tabset\">\n          <tab heading=\"Informacje\">\n            <!-- \n    children: string;\n    languages: string; -->\n            <table>\n              <tr>\n                <td>\n                  <h5> <i class=\"fa fa-arrows-v\" aria-hidden=\"true\"></i> Wzrost</h5>\n                  <p>{{user?.growth}} cm</p>\n                </td>\n                <td>\n                  <h5><i class=\"fa fa-gratipay\" aria-hidden=\"true\"></i> Status</h5>\n                  <p>{{user?.martialStatus}}</p>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <h5><i class=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i> Wykształcenie</h5>\n                  <p>{{user?.edukation}} </p>\n                </td>\n                <td>\n                  <h5><i class=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Praca</h5>\n                  <p>{{user?.profession}}</p>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <h5><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> Kolor oczu</h5>\n                  <p>{{user?.eyeColor}} </p>\n                </td>\n                <td>\n                  <h5><i class=\"fa fa-scissors\" aria-hidden=\"true\"></i> Kolor włosów</h5>\n                  <p>{{user?.hairColor}}</p>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <h5><i class=\"fa fa-language\" aria-hidden=\"true\"></i> Języki</h5>\n                  <p>{{user?.languages}} </p>\n                </td>\n                <td>\n                  <h5><i class=\"fa fa-child\" aria-hidden=\"true\"></i> Dzieci</h5>\n                  <p>{{user?.children}}</p>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <h5><i class=\"fa fa-venus-mars\" aria-hidden=\"true\"></i> Płęć</h5>\n                  <p>{{user?.gender}}</p>\n                </td>\n              </tr>\n            </table>\n          </tab>\n          <!-- description: string;\n          personality: string;\n          lookingFor: string;\n          //\n          interests: string;\n          freeTime: string;\n          //\n          iLike: string;\n          iDontLike: string;\n          //\n          photos: Photo[];\n          photoUrl: string; -->\n          <tab heading=\"O mnie\">\n            <h5><i class=\"fa fa-align-left\" aria-hidden=\"true\"></i> Opis</h5>\n            <p>{{user?.description}}</p>\n            <h5><i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i> Osobowość</h5>\n            <p>{{user?.personality}}</p>\n            <h5><i class=\"fa fa-search\" aria-hidden=\"true\"></i> Szukam</h5>\n            <p>{{user?.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Zainteresowania\">\n            <h5><i class=\"fa fa-puzzle-piece\" aria-hidden=\"true\"></i> Zainteresowania</h5>\n            <p>{{user?.interests}}</p>\n            <h5> <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Czas wolny</h5>\n            <p>{{user?.freeTime}}</p>\n            <h5><i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\"></i> Lubię</h5>\n            <p>{{user?.iLike}}</p>\n            <h5><i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\"></i> Nie lubię</h5>\n            <p>{{user?.iDontLike}}</p>\n          </tab>\n          <tab heading=\"Zdjęcia\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n          </tab>\n          <tab heading=\"Wiadomości\">\n            Tutaj będa Wiadomości\n          </tab>\n        </tabset>\n      </div>\n\n    </div>\n  </div>\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { AuthService } from 'src/app/_serwises/auth/auth.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n\n  user: User;\n  @ViewChild('editForm') editForm: NgForm;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotyfication($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alerti: AlertifyService,\n    private userService: UserService,\n    private auth: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n  }\n  updateUser() {\n    this.userService.updateUser(this.auth.dekoded.nameid, this.user)\n      .subscribe(\n        () => {\n          this.auth.currentUser = this.user;\n          this.alerti.success('Profil pomyślnie zaktualizowany');\n          this.editForm.reset(this.user);\n        }, error => { this.alerti.error(error); }\n      );\n  }\n  UpdateMainPhoto(url: string) {\n    this.user.photoUrl = url;\n  }\n}\n","<div class=\"container container-pad\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n    <h4>Mój profil</h4>\n  </div>\n  <div class=\"col-md-8\">\n    <div *ngIf=\"editForm.dirty\" class=\"alert alert-warning\">\n      <strong>Informacja:</strong> dokonałeś zmian, niezapisane zmiany zostaną utracone!\n    </div>\n  </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-12\">\n      <div class=\"card\">\n        <!-- <img [src]=\"user?.photoUrl\" class=\"card-img-top img-radious img-thumbnail\"> -->\n        <img class=\"card-img-top img-radious img-thumbnail\" [src]=\"user.photoUrl ? user.photoUrl :\n        user.gender=='kobieta'? '../../assets/women.svg':'../../assets/men.svg'\">\n        <div class=\"card-body text-center\">\n          <h4 class=\"card-title\">{{user?.userName}}, {{user?.age}}</h4>\n          <p class=\"card-text\">{{user?.city}}, {{user?.country}}</p>\n          <button [disabled]=\"!editForm.dirty\" class=\"btn btn-info btn-block\" form = \"editForm\">\n            Zapisz zmiany\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-8 col-sm-12\">\n      <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser();\">\n        <div class=\"tab-panel\">\n          <tabset class=\"user-tabset\">\n            <tab heading=\"Informacje\">\n              <table>\n                <tr>\n                  <td class=\"form-group px-4\">\n\n                    <h5> <i class=\"fa fa-arrows-v\" aria-hidden=\"true\"></i> Wzrost</h5>\n                    <input [(ngModel)]=\"user.growth\" type=\"text\" name=\"growth\" class=\"form-control \">\n                  </td>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-gratipay\" aria-hidden=\"true\"></i> Status</h5>\n                    <select [(ngModel)]=\"user.martialStatus\" name=\"martialStatus\" class=\"form-control\" [value] = \"user.martialStatus\" >\n                      <option value=\"wolny\">wolny</option>\n                      <option value=\"w związku\">w związku</option>\n                      <option value=\"zaręczona/zaręczony\">zaręczona/zaręczony</option>\n                      <option value=\"żonaty/zamężna\">żonaty/zamężna</option>\n                      <option value=\"wdowa/wdowiec\">wdowa/wdowiec</option>\n                      <option value=\"po rozwodzie\">po rozwodzie</option>\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i> Wykształcenie</h5>\n                    <select [(ngModel)]=\"user.edukation\" class=\"form-control\" name=\"edukation\" [value] = \"user.edukation\" >\n                      <option value=\"podstawowe\">podstawowe</option>\n                      <option value=\"zawodowe\">zawodowe</option>\n                      <option value=\"średnie\">średnie</option>\n                      <option value=\"wyższe\">wyższe</option>\n                    </select>\n                  </td>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-briefcase\" aria-hidden=\"true\"></i> Praca</h5>\n                    <input [(ngModel)]=\"user.profession\" type=\"text\" name=\"profession\" class=\"form-control \">\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> Kolor oczu</h5>\n                    <select [(ngModel)]=\"user.eyeColor\" class=\"form-control\" name=\"eyeColor\" [value] = \"user.eyeColor\" >\n                      <option value=\"brązowe\">Brązowe</option>\n                      <option value=\"ciemnobrązowe\">Ciemnobrązowe</option>\n                      <option value=\"piwne\">Piwne</option>\n                      <option value=\"zielone\">Zielone</option>\n                      <option value=\"szare\">Szare</option>\n                      <option value=\"niebieskie\">Niebieskie</option>\n                    </select>\n                  </td>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-scissors\" aria-hidden=\"true\"></i> Kolor włosów</h5>\n                    <input [(ngModel)]=\"user.hairColor\" type=\"text\" name=\"hairColor\" class=\"form-control\">\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-language\" aria-hidden=\"true\"></i> Języki</h5>\n                    <textarea class=\"form-control\"[(ngModel)]=\"user.languages\"name=\"languages\"  rows=\"1\"></textarea>\n                \n                  </td>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-child\" aria-hidden=\"true\"></i> Dzieci</h5>\n                    <select [(ngModel)]=\"user.children\" class=\"form-control\" name=\"children\" [value] = \"user.children\" >\n                      <option value=\"tak\">Tak</option>\n                      <option value=\"nie\">Nie</option>\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-venus-mars\" aria-hidden=\"true\"></i> Płęć</h5>\n                    <select [(ngModel)]=\"user.gender\" class=\"form-control\" name=\"gender\" [value] = \"user.gender\" >\n                      <option value=\"kobieta\">Kobieta</option>\n                      <option value=\"mężczyzna\">Mężczyzna</option>\n                    </select>\n                  </td>\n                  <td class=\"form-group px-4\">\n                    <h5><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> Miasto</h5>\n                    <input [(ngModel)]=\"user.city\" type=\"text\" name=\"city\" class=\"form-control\">\n                  </td>\n                </tr>\n                <tr><td class=\"form-group px-4\">\n                  <h5><i class=\"fa fa-globe\" aria-hidden=\"true\"></i> Kraj</h5>\n                  <input [(ngModel)]=\"user.country\" type=\"text\" name=\"country\" class=\"form-control\">\n                </td>\n              </tr>\n              </table>\n            </tab>\n            <tab heading=\"O mnie\">\n              <h5><i class=\"fa fa-align-left\" aria-hidden=\"true\"></i> Opis</h5>\n              <textarea name=\"description\" class=\"form-control\" [(ngModel)]=\"user.description\"  rows=\"3\"></textarea>\n              <h5><i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i> Osobowość</h5>\n              <textarea name=\"personality\" class=\"form-control\" [(ngModel)]=\"user.personality\"  rows=\"2\"></textarea>\n              <h5><i class=\"fa fa-search\" aria-hidden=\"true\"></i> Szukam</h5>\n              <textarea name=\"lookingFor\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"  rows=\"1\"></textarea>\n            </tab>\n            <tab heading=\"Zainteresowania\">\n              <h5><i class=\"fa fa-puzzle-piece\" aria-hidden=\"true\"></i> Zainteresowania</h5>\n              <textarea name=\"interests\" class=\"form-control\" [(ngModel)]=\"user.interests\"  rows=\"2\"></textarea>\n              <h5> <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Czas wolny</h5>\n              <textarea name=\"freeTime\" class=\"form-control\" [(ngModel)]=\"user.freeTime\"  rows=\"2\"></textarea>\n              <h5><i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\"></i> Lubię</h5>\n              <textarea name=\"iLike\" class=\"form-control\" [(ngModel)]=\"user.iLike\"  rows=\"2\"></textarea>\n              <h5><i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\"></i> Nie lubię</h5>\n              <textarea name=\"iDontLike\" class=\"form-control\" [(ngModel)]=\"user.iDontLike\"  rows=\"2\"></textarea>\n            </tab>\n            <tab heading=\"Zdjęcia\">\n              <app-photos (getUserPhotoChange)=\"UpdateMainPhoto($event)\" [photos]=\"user.photos\"></app-photos>\n            </tab>\n          </tabset>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaginationComponent } from 'ngx-bootstrap/pagination';\nimport { Pagination, PaginationResult } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/User.model';\nimport { AlertifyService } from 'src/app/_serwises/alertify/alertify.service';\nimport { UserService } from 'src/app/_serwises/user/user.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n\n  page: Pagination;\n  sortParam = 'Ostatnia aktywność';\n\n  genderList = [{ value: 'mężczyzna', display: 'Meżczyźni' },\n  { value: 'kobieta', display: 'Kobiety' }];\n\n  sortList = [\n    { value: 'lastAction', display: 'Ostatnia aktywność', id: 0 },\n    { value: 'age', display: 'Wiek', id: 1 },\n    { value: 'userName', display: 'Nazwa użytkownika', id: 2 },\n    { value: 'created', display: 'Data dołaczenia', id: 3 }];\n  userParams: any = {};\n  user: User;\n\n  users: User[];\n\n  constructor(private userService: UserService, private alertity: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data.users.result;\n      this.page = data.users.pagination;\n    });\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.userParams.gender = this.user.gender === 'kobieta' ? 'mężczyzna' : 'kobieta';\n    this.userParams.city = '';\n    this.userParams.minAge = 16;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastAction';\n\n  }\n  pageChanged(event: any): void {\n    this.page.currantPage = event.page;\n    this.loadUsers();\n  }\n  loadUsers() {\n    console.log(this.userParams);\n\n    this.userService.getUsers(this.page.currantPage, this.page.itemPerPage, this.userParams)\n      .subscribe((res: PaginationResult<User[]>) => {\n        this.users = res.result;\n        this.page = res.pagination;\n      }, error => {\n        this.alertity.error(error);\n      });\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'kobieta' ? 'mężczyzna' : 'kobieta';\n    this.userParams.city = '';\n    this.userParams.minAge = 16;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastAction';\n    this.loadUsers();\n  }\n\n  sort(orderBy: number) {\n    this.userParams.orderBy = this.sortList[orderBy].value;\n    this.sortParam = this.sortList[orderBy].display;\n    this.loadUsers();\n  }\n}\n","<div class=\"container container-pad\">\n  <div class=\"row\">\n\n    <div class=\"col-md-3 mt-5\">\n      <div class=\"alert alert-dismissible alert-dark\">\n        <strong>{{users.length}} z {{page.totalItems}}</strong> Wyników\n      </div>\n      <h4>Sortowanie</h4>\n      <div class=\"btn-group btn-block my-4\" dropdown>\n        <button dropdownToggle type=\"button\" class=\"btn-outline-primary btn  btn-block btndropdown-toggle\"\n          aria-controls=\"dropdown-animated\">\n        {{sortParam}}\n        </button>\n        <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\">\n          <li *ngFor=\"let item of sortList\" role=\"menuitem\" (click)=\"sort(item.id)\">\n            <p class=\"dropdown-item\"> {{item.display}}</p>\n          </li>\n\n        </ul>\n      </div>\n      <h4>Filtrownie</h4>\n      <form class=\"form mt-3\" #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n        <div class=\"form-group\">\n          <label for=\"minAge\">Wiek od {{userParams.minAge}} lat</label>\n          <input type=\"range\" min=\"16\" max=\"100\" ma class=\"form-control-range\" id=\"minAge\"\n            [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n        </div>\n        <div class=\"form-group px-2\">\n          <label for=\"maxAge\">Wiek do {{userParams.maxAge}} lat</label>\n          <input type=\"range\" min=\"16\" max=\"100\" ma class=\"form-control-range\" id=\"maxAge\"\n            [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n        </div>\n        <div class=\"form-group px-2\">\n          <label for=\"gender\">Płeć: </label>\n          <select class=\"form-control ml-1\" id=\"gender\" [(ngModel)]=\"userParams.gender\" name=\"gender\">\n            <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n              {{ gender.display }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group px-2\">\n          <label for=\"gender\">Miasto: </label>\n          <input type=\"text\" class=\"form-control ml-1\" id=\"city\" [(ngModel)]=\"userParams.city\" name=\"city\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-info btn-block\" style=\"margin-left:10px\">Zastosuj filtr</button>\n        <button type=\"button\" class=\"btn btn-danger btn-block\" style=\"margin-left:10px\"\n          (click)=\"resetFilters()\">Zresetuj\n          filtr</button>\n      </form>\n    </div>\n    <div class=\"col-md-9\">\n\n      <div class=\"row\">\n        <pagination class=\"ml-auto pagination-success pagination-lg mt-3\" [totalItems]=\"page.totalItems\"\n          [itemsPerPage]=\"page.itemPerPage\" [(ngModel)]=\"page.currantPage\" [maxSize]=\"5\" previousText=\"&lsaquo;\"\n          nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\" [boundaryLinks]=\"true\"\n          (pageChanged)=\"pageChanged($event)\"></pagination>\n\n      </div>\n      <div class=\"row\">\n        <div *ngFor=\"let user of users\" class=\"col-lg-4 col-md-6 col-sm-12\">\n          <app-user-card [user]=\"user\"></app-user-card>\n        </div>\n      </div>\n      <div class=\"row\">\n        <pagination class=\"ml-auto pagination-success pagination-lg mt-3\" [totalItems]=\"page.totalItems\"\n          [itemsPerPage]=\"page.itemPerPage\" [(ngModel)]=\"page.currantPage\" [maxSize]=\"5\" previousText=\"&lsaquo;\"\n          nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\" pageBtnClass=\"btn-page\" [boundaryLinks]=\"true\"\n          (pageChanged)=\"pageChanged($event)\"></pagination>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-value',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.css']\n})\nexport class ValueComponent implements OnInit {\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get(\"http://localhost:5000/values\").subscribe(response => { this.values = response; },\n    error => {console.log(error);}\n    );\n\n  }\n\n}\n","\n aaa\n<p *ngFor=\"let value of values\">\n  {{value.nazwa}}\n</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:5000/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}